name: Foodgram-project workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python

      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8==6.0.0 flake8-isort==6.0.0
        pip install -r backend/requirements.txt

    - name: Test with flake8
      run: |
        flake8
        cd backend/

  build_and_push_to_docker_hub:
    name: Push Docker images to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Backend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: backend/
          tags: nikolay2310/foodgram_backend-1:latest

      - name: Push Frontend to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          context: frontend/
          tags: nikolay2310/foodgram_frontend-1:latest
  deploy:
      runs-on: ubuntu-latest
      needs: build_and_push_to_docker_hub
      steps:
        - name: executing remote ssh commands to deploy
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USER }}
            key: ${{ secrets.SSH_KEY }}
            passphrase: ${{ secrets.SSH_PASSPHRASE }}
            source: "infra/docker-compose.yml"
            target: "foodgram"
            script: |
              # Выполняет pull образов с Docker Hub
              cd foodgram/infra
              sudo docker compose -f docker-compose.yml pull
              # Перезапускает все контейнеры в Docker Compose
              sudo docker compose -f docker-compose.yml down
              sudo docker compose -f docker-compose.yml up -d
              # Выполняет миграции и сбор статики
              sudo docker compose -f docker-compose.yml exec backend python manage.py makemigrations api
              sudo docker compose -f docker-compose.yml exec backend python manage.py makemigrations users
              sudo docker compose -f docker-compose.yml exec backend python manage.py migrate
              sudo docker compose -f docker-compose.yml exec backend python manage.py collectstatic
              sudo docker compose -f docker-compose.yml exec backend cp -r /static/. /backend_static/static/

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!
